application:
  configuration:
    input.identity: "root"
    input.cookbooks_url: "https://s3.amazonaws.com/qubell-starter-kit-artifacts/qubell-bazaar/component-hadoop-cookbooks-stable-7202362.tar.gz"
    input.repository_url: "http://archive.cloudera.com"
    input.cloudera_manager_version: "5.1.3"
    input.cloudera_hadoop_version: "5.1.3"
  interfaces:
    input:
      identity: "bind(cloudera-oozie#input.identity)"
      cookbooks_url: "bind(cloudera-oozie#input.cookbooks_url)"
      repository_url: "bind(cloudera-oozie#input.repository_url)"
      cloudera_manager_version: "bind(cloudera-oozie#input.cloudera_manager_version)"
      cloudera_hadoop_version: "bind(cloudera-oozie#input.cloudera_hadoop_version)"
    vms:
      Node_Manager: "bind(cloudera-oozie#vms.Node_Manager)"
      Node_Manager_DNS: "bind(cloudera-oozie#vms.Node_Manager_DNS)"
      Node_Master: "bind(cloudera-oozie#vms.Node_Master)"
      Node_Master_DNS: "bind(cloudera-oozie#vms.Node_Master_DNS)"
      DataNodes: "bind(cloudera-oozie#vms.DataNodes)"
      DataNodesDNS: "bind(cloudera-oozie#vms.DataNodesDNS)"
    cloudera-hive:
      Hive_Server: "bind(cloudera-oozie#cloudera-hive.Hive_Server)"
      Hive_Metastore: "bind(cloudera-oozie#cloudera-hive.Hive_Metastore)"
    cloudera-oozie:
      Oozie_Server: "bind(cloudera-oozie#result.Oozie_Server)"
  components:
    cloudera-oozie:
      type: workflow.Instance
      interfaces:
        input:
          identity: configuration(string)
          repository_url: configuration(string)
          cookbooks_url: configuration(string)
          cloudera_hadoop_version: configuration(string)
          cloudera_manager_version: configuration(string)
        vms:
          Node_Manager: consume-signal(list<string>)
          Node_Manager_DNS: consume-signal(string)
          Node_Master: consume-signal(list<string>)
          Node_Master_DNS: consume-signal(string)
          DataNodes: consume-signal(list<string>)
          DataNodesDNS: consume-signal(list<string>)
        cloudera-hive:
          Hive_Server: consume-signal(list<string>)
          Hive_Metastore: consume-signal(list<string>)
        result:
          Oozie_Server: publish-signal(list<string>)
      required: [vms, cloudera-hive]
      configuration:
        configuration.triggers: {}
        configuration.workflows:
          launch:
            steps:
              - get-env-props:
                  action: getEnvironmentProperties
                  output:
                    props: result
              - provision-manager-node:
                  action: provisionVms
                  precedingPhases: [ get-env-props ]
                  parameters:
                    roleName: "manager"
                    hardwareId: ""
                    vmIdentity: "{$.identity}"
                    staticIps: "{$.props.vms.Node_Manager}"
                  output:
                    managerIp: ips
              - install-oozie:
                  action: chefrun
                  phase: install-oozie
                  precedingPhases: [ provision-manager-node ]
                  parameters:
                    isSudo: true
                    isSolo: true
                    roles: [ "manager" ]
                    recipeUrl: "{$.cookbooks_url}"
                    runList: [ "recipe[cloudera::oozie]" ]
                    jattrs:
                      cloudera:
                        master:
                          host: "{$.props.vms.Node_Master_DNS}"
                          ip: "{$.props.vms.Node_Master[0]}"
                        manager:
                          host: "{$.props.vms.Node_Manager_DNS}"
                          version: "{$.cloudera_manager_version}"
                        jobtracker:
                          host: "{$.props.vms.Node_Manager_DNS}"
                          ip: "{$.props.vms.Node_Manager[0]}"
                        hadoop:
                          version: "{$.cloudera_hadoop_version}"
                        repository_url: "{$.repository_url}"
              - start-oozie:
                  action: chefrun
                  phase: start-oozie
                  precedingPhases: [ install-oozie ]
                  parameters:
                    isSudo: true
                    isSolo: true
                    roles: [ "manager" ]
                    recipeUrl: "{$.cookbooks_url}"
                    runList: [ "recipe[cloudera::start_oozie]" ]
                    jattrs:
                      cloudera:
                        manager:
                          host: "{$.props.vms.Node_Manager_DNS}"
                          version: "{$.cloudera_manager_version}"
                        hadoop:
                          version: "{$.cloudera_hadoop_version}"
                        repository_url: "{$.repository_url}"
            return:
              - Oozie_Server:
                  description:                "Oozie server node"
                  value:                      "{$.props.vms.Node_Manager}"